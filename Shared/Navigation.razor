@using BlazorHomeSite.Data
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationDbContext> DbFactory

<MudPaper Width="250px" Class="py-3" Elevation="0">
    <MudNavMenu>
        <MudNavLink Href="/" Icon="@Icons.Filled.Home" Match="NavLinkMatch.All">About</MudNavLink>

        <MudNavGroup Title="Photos" Icon="@Icons.Filled.Camera" Expanded="true">
            @foreach (var album in GetAllAlbums())
            {
                <MudNavLink Href=@GetAlbumRoute(album.Id)
                            Match="NavLinkMatch.Prefix">
                    <MudStack Row="true">
                        <MudImage Width="20" Height="20" Src="@GetThumbnailForAlbum(album.Id)"></MudImage>
                        <MudPaper Elevation="5">
                            @album.Description
                        </MudPaper>

                    </MudStack>
                </MudNavLink>
            }
            <MudPaper Style="margin-left: 10px; margin-right: 10px">
                <MudNavLink Icon="@Icons.Filled.PhotoAlbum" Href="/allPhotos" Match="NavLinkMatch.Prefix">All Photos</MudNavLink>
            </MudPaper>

        </MudNavGroup>

        <MudNavLink Href="/music" Match="NavLinkMatch.Prefix">Music</MudNavLink>
        <MudNavLink Href="/siteConfigPage"
                    Icon="@Icons.Filled.Settings"
                    Match="NavLinkMatch.Prefix">
            Site Config
        </MudNavLink>
    </MudNavMenu>
</MudPaper>

@code
{
    private string GetAlbumRoute(int id)
    {
        return $"/photoAlbum/{id}";
    }

    private string? GetThumbnailForAlbum(int id)
    {
        using var context = DbFactory.CreateDbContext();
        var cover = context.Photos.FirstOrDefault(x => x.AlbumId == id && x.IsAlbumCover);
        return cover?.ThumbnailPath.Replace("wwwroot", "");
    }

    private List<PhotoAlbum> GetAllAlbums()
    {
        if (DbFactory == null) return new List<PhotoAlbum>();

        using var context = DbFactory.CreateDbContext();
        var albums = context.PhotoAlbums.Where(x => x.Description != "All The Rest").ToList();
        return albums;
    }
}