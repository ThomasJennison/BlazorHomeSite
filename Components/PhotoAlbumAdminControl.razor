@using BlazorHomeSite.Data
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationDbContext> DbFactory

<MudGrid Justify="Justify.Center">
    <MudItem xs="6">
        <MudPaper Class="d-flex align-center justify-center mud-width-full">
            <MudStack>
                <MudText Typo="Typo.h6">Add New Photo Album</MudText>
                <MudButton Color="Color.Primary"
                           Size="Size.Small"
                           OnClick="async () => await AddNewAlbumAsync()"
                           StartIcon="@Icons.Material.Filled.Add"/>
            </MudStack>
          
        </MudPaper>
    </MudItem>
    
    <MudItem xs="6">
        <MudPaper Class="d-flex align-center justify-center mud-width-full">
            <MudStack>
                
                <MudText Typo="Typo.h6">Clear All Albums</MudText>
                <MudButton Color="Color.Primary"
                        Size="Size.Small"
                        OnClick="async () => await ClearAllAlbums()"
                        StartIcon="@Icons.Material.Filled.Dangerous"/>
            </MudStack>
        </MudPaper>
    </MudItem>
    
</MudGrid>


@code {
    private async Task AddNewAlbumAsync()
    {
        await using var context = await DbFactory.CreateDbContextAsync();

        var newAlbum = new PhotoAlbum();
        newAlbum.Description = $"New Album {DateTime.Now.ToString("yy-MM-dd--hh--mm-ss")}";
        var contact = await context.PhotoAlbums.AddAsync(newAlbum);
        await context.SaveChangesAsync();
    }
    
    private async Task ClearAllAlbums()
    {
        await using var context = await DbFactory.CreateDbContextAsync();

        foreach (var album in context.PhotoAlbums)
        {
            context.PhotoAlbums.Remove(album);
        }
        await context.SaveChangesAsync();
    }
}