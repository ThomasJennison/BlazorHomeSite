@page "/photoAlbumsPage"
@using BlazorHomeSite.Components.Photos
@using BlazorHomeSite.Data.Photos;
@using BlazorHomeSite.Services.Photos.PhotoAlbums;
@inject IPhotoAlbumService PhotoAlbumService;

<PageTitle>Photo Albums</PageTitle>

<MudPaper Style="padding: 2%">
    <MudStack>

        <CascadingAuthenticationState>
            <AuthorizeView Roles="Admin">
                <PhotoAlbumEditor />
                <MudDivider />
            </AuthorizeView>
        </CascadingAuthenticationState>

        <MudTable Items="@_photoAlbums" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Description</MudTh>
                <MudTh>View</MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Description">@context.Description</MudTd>

                <MudTd>
                    <MudNavLink Href=@GetAlbumNavigationPath(context.Id)
                                IconColor="Color.Surface"
                                Match="NavLinkMatch.Prefix"
                                Icon="@Icons.Material.Filled.NavigateNext">
                    </MudNavLink>
                </MudTd>

                <MudTd>
                    <CascadingAuthenticationState>
                        <AuthorizeView Roles="Admin" Context="delete_album_context">
                            <MudIconButton Icon="@Icons.Material.Filled.DeleteForever" OnClick="async ()=> await DeleteAlbum(context.Id)" />
                        </AuthorizeView>
                    </CascadingAuthenticationState>
                </MudTd>

            </RowTemplate>
        </MudTable>

    </MudStack>
</MudPaper>
@code {
    List<PhotoAlbum> _photoAlbums = new List<PhotoAlbum>();
    bool _loading = true;

    private string GetAlbumNavigationPath(int id)
    {
        return $"/photoAlbumPage/{id}";
    }

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        await base.OnInitializedAsync();
        _photoAlbums = await PhotoAlbumService.GetAllAlbumsAsync();
        _loading = false;
    }

    private async Task DeleteAlbum(int id)
    {
        await PhotoAlbumService.DeletePhotoAlbumAsync(id);
        _photoAlbums = await PhotoAlbumService.GetAllAlbumsAsync();
        StateHasChanged();
    }

}
